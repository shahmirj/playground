// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(
        in=load, 
        a=l1, b=l2, c=l3, d=l4, e=l5, f=l6, g=l7, h=l8, 
        sel=address
    );

    // Where e stands for emit
    Register(in=in, load=l1, out=e1);
    Register(in=in, load=l2, out=e2);
    Register(in=in, load=l3, out=e3);
    Register(in=in, load=l4, out=e4);
    Register(in=in, load=l5, out=e5);
    Register(in=in, load=l6, out=e6);
    Register(in=in, load=l7, out=e7);
    Register(in=in, load=l8, out=e8);

    Mux8Way16(
        a=e1, b=e2, c=e3, d=e4, e=e5, f=e6, g=e7, h=e8,
        sel=address, out=out
    );
}
